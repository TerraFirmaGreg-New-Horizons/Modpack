name: Project Info
run-name: "Project Info #${{ github.run_number }}"
on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  RELEASE_TYPE: "release"

jobs:
  info:
    name: üñ•Ô∏è Project Info
    runs-on: ubuntu-latest
    outputs:
      project_version: ${{ steps.project_version.outputs.tag }}
      project_name: ${{ steps.project_name.outputs.value }}
      project_full_name: ${{ steps.project_name.outputs.value }}-${{ steps.project_version.outputs.tag }}
      changelog: ${{ steps.changelog.outputs.description }}
      diff: ${{ steps.read_diff.outputs.diff }}
      release_type: ${{ env.RELEASE_TYPE }}
      minecraft_version: ${{ steps.minecraft_version.outputs.value }}
      exists: ${{ steps.check_tag.outputs.exists }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
        
      - name: üîç Check pakku-lock.json
        id: check_pakku_lock
        shell: bash
        run: |
          if [ ! -f pakku-lock.json ]; then
            echo "‚ùå Could not find pakku-lock.json" && exit 1
          else
            echo "‚úîÔ∏è pakku-lock.json"
          fi
        
      - name: üîç Check pakku.json
        id: check_pakku
        shell: bash
        run: |
          if [ ! -f pakku.json ]; then
            echo "‚ùå Could not find pakku.json" && exit 1
          else
            echo "‚úîÔ∏è pakku.json"
          fi
        
      - name: üìà Get latest tag
        id: latest_tag
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          if [ -z "$tag" ]; then
            echo "‚ùå Latest tag not found" && exit 1
          else
            echo "‚úîÔ∏è Latest tag found: $tag"
            echo "tag=$tag" >> $GITHUB_OUTPUT
          fi
        
      - name: üîç Check pakku-lock.json in previous tag
        id: check_pakku_lock_prev
        shell: bash
        run: |
          if ! git ls-tree -r ${{ steps.latest_tag.outputs.tag }} -- ./pakku-lock.json &> /dev/null; then
            echo "‚ùå File pakku-lock.json not found in previous tag" && exit 1
          else
            echo "‚úîÔ∏è File pakku-lock.json found in previous tag"
          fi
        
      - name: üìÅ Copy pakku-lock.json from previous tag
        id: copy_pakku_lock_prev
        shell: bash
        run: |
          git show tags/${{ steps.latest_tag.outputs.tag }}:./pakku-lock.json > ./pakku-lock-prev.json
          if [ -s ./pakku-lock-prev.json ]; then
            echo "‚úîÔ∏è File pakku-lock-prev.json created"
          else
            echo "‚ùå Error: File pakku-lock-prev.json is empty or not created" && exit 1
          fi
        
      - name: üì¶ Download pakku.jar
        id: download_pakku
        shell: bash
        run: |
          curl https://github.com/juraj-hrivnak/pakku/releases/latest/download/pakku.jar -o pakku.jar -L -J
          echo "‚úîÔ∏è Downloaded pakku.jar "
        
      - name: üîÑ Run pakku diff
        id: pakku_diff
        shell: bash
        run: |
          java -jar pakku.jar diff -v --markdown PROJECTS_DIFF.md ./pakku-lock-prev.json ./pakku-lock.json
          if [ -f PROJECTS_DIFF.md ]; then
            echo "‚úîÔ∏è Comparison completed"
          else
            echo "‚ùå Error: File PROJECTS_DIFF.md not created" && exit 1
          fi
        
      - name: üìù Read PROJECTS_DIFF.md to variable
        id: read_diff
        shell: bash
        run: |
          echo "üìù Reading PROJECTS_DIFF.md to variable..."
          {
            echo 'diff<<EOF'
            cat -v PROJECTS_DIFF.md
            echo EOF
          } >> "$GITHUB_OUTPUT"
          echo "‚úîÔ∏è Diff content read to variable"
        
      - name: üìä Get Project Name
        id: project_name
        uses: ActionsTools/read-json-action@v1.0.5
        with:
          file_path: "pakku.json"
          prop_path: "name"
        
      - name: üìä Get Project Version
        id: project_version
        uses: ActionsTools/read-json-action@v1.0.5
        with:
          file_path: "pakku.json"
          prop_path: "version"

      - name: üìä Get Minecraft Version
        id: minecraft_version
        uses: ActionsTools/read-json-action@v1.0.5
        with:
          file_path: "pakku-lock.json"
          prop_path: "mc_versions"

      - run: |
          echo ${{steps.minecraft_version.outputs.value}}
        
      - name: üìÑ Changelog Parser
        id: changelog
        uses: coditory/changelog-parser@v1.0.2
        with:
          path: CHANGELOG.md
        
      - name: üìà Upload Diff
        id: upload_diff
        if: ${{ steps.read_diff.outputs.diff != '' }}
        uses: actions/upload-artifact@v4.4.3
        with:
          name: Mods-diff
          path: PROJECTS_DIFF.md
        
      - name: üîç Check if tag exists
        uses: mukunku/tag-exists-action@v1.6.0
        id: check_tag
        with:
          tag: ${{ steps.project_version.outputs.value }}
        
      - name: üìù Generate Github Summary
        run: |
          echo "üìÉ **Name**: ${{ steps.project_name.outputs.value }}" >> $GITHUB_STEP_SUMMARY
          echo "üìÉ **Release**: ${{ steps.project_version.outputs.value }}" >> $GITHUB_STEP_SUMMARY
          echo "üìÉ **Release Type**: ${{ env.RELEASE_TYPE }}" >> $GITHUB_STEP_SUMMARY
          echo "üìÉ **Game Version**: ${{ steps.minecraft_version.outputs.value }}" >> $GITHUB_STEP_SUMMARY
          
          echo "${{ steps.changelog.outputs.description }}" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ steps.read_diff.outputs.diff != '' }}" ]; then
            echo "${{ steps.read_diff.outputs.diff }}" >> $GITHUB_STEP_SUMMARY
          fi
    
  build-modpack:
    name: Build Modpack
    runs-on: ubuntu-latest
    needs: [info]
    if: needs.info.outputs.exists != 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Replace strings
        shell: bash
        run: |
          set +e

          grooovy="./groovy/runConfig.json"
          cat <<< $(jq '.debug = false' $grooovy) > $grooovy

          VERSION=${{ needs.info.outputs.project_version }}
          sed -i -e "s/DEV/${VERSION}/g" pakku.json
          sed -i -e "s/DEV/${VERSION}/g" config/fancymenu/customization/gui_main_menu.txt

      # - name: Cache pakku
      #   uses: actions/cache@v4.1.2
      #   with:
      #     path: build/.cache
      #     key: ${{ runner.OS }}-pakku-cache-${{ hashFiles('build/.cache/') }}
      #     restore-keys: ${{ runner.OS }}-pakku-cache-

      - name: Export modpack
        run: |
          curl https://github.com/juraj-hrivnak/pakku/releases/latest/download/pakku.jar -o pakku.jar -L -J
          java -jar pakku.jar export

      - name: Rename artifact curseforge
        run: |
          cd ./build/curseforge/
          mv *.zip $(basename -s .zip *.zip)-curseforge.zip
          
      - name: Upload artifact CurseForge
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ${{ needs.info.outputs.project_full_name }}-curseforge
          path: ./build/curseforge/${{ needs.info.outputs.project_full_name }}-curseforge.zip
          if-no-files-found: error

      - name: Rename artifact modrinth
        run: |
          cd ./build/modrinth/
          mv *.mrpack $(basename -s .mrpack *.mrpack)-modrinth.mrpack

      - name: Upload artifact modrinth
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ${{ needs.info.outputs.project_full_name }}-modrinth
          path: ./build/modrinth/${{ needs.info.outputs.project_full_name }}-modrinth.mrpack
          if-no-files-found: warn

  build-server:
    name: Build Server
    runs-on: ubuntu-latest
    needs: [info]
    if: needs.info.outputs.exists != 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Replace strings
        shell: bash
        run: |
          set +e

          grooovy="./groovy/runConfig.json"
          cat <<< $(jq '.debug = false' $grooovy) > $grooovy

          VERSION=${{ needs.info.outputs.project_version }}
          sed -i -e "s/DEV/${VERSION}/g" pakku.json
          sed -i -e "s/DEV/${VERSION}/g" config/fancymenu/customization/gui_main_menu.txt

      # - name: Cache pakku
      #   uses: actions/cache@v4.1.2
      #   with:
      #     path: build/.cache
      #     key: ${{ runner.OS }}-pakku-cache-${{ hashFiles('build/.cache/') }}
      #     restore-keys: ${{ runner.OS }}-pakku-cache-

      - name: Export modpack
        run: |
          mv -vf ./.pakku/server-overrides/* ./
          curl https://github.com/juraj-hrivnak/pakku/releases/latest/download/pakku.jar -o pakku.jar -L -J
          java -jar pakku.jar export

      - name: Rename artifact server
        run: |
          cd ./build/serverpack/
          mv *.zip $(basename -s .zip *.zip)-serverpack.zip

      - name: Upload artifact server
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ${{ needs.info.outputs.project_full_name }}-serverpack
          path: ./build/serverpack/${{ needs.info.outputs.project_full_name }}-serverpack.zip
          if-no-files-found: error

  build-multimc:
    name: Build MultiMC
    runs-on: ubuntu-latest
    needs: [info]
    if: needs.info.outputs.exists != 'true'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Replace strings
        shell: bash
        run: |
          set +e

          grooovy="./groovy/runConfig.json"
          cat <<< $(jq '.debug = false' $grooovy) > $grooovy

          VERSION=${{ needs.info.outputs.project_version }}
          sed -i -e "s/DEV/${VERSION}/g" pakku.json
          sed -i -e "s/DEV/${VERSION}/g" config/fancymenu/customization/gui_main_menu.txt
          sed -i -e "s/DEV/${VERSION}/g" .pakku/multimc-overrides/instance.cfg

      # - name: Cache pakku
      #   uses: actions/cache@v4.1.2
      #   with:
      #     path: build/.cache
      #     key: ${{ runner.OS }}-pakku-cache-${{ hashFiles('build/.cache/') }}
      #     restore-keys: ${{ runner.OS }}-pakku-cache-

      - name: Export
        run: |
          curl https://github.com/juraj-hrivnak/pakku/releases/latest/download/pakku.jar -o pakku.jar -L -J
          java -jar pakku.jar --debug fetch
          java -jar pakku.jar --debug export
          
      - name: Move files
        run: |
          ls
          mkdir -p .pakku/multimc-overrides/flame
          mv -vf ./build/.cache/curseforge/manifest.json .pakku/multimc-overrides/flame/manifest.json
          mv -vf ./build/.cache/curseforge/overrides .pakku/multimc-overrides/.minecraft
          mv -vf ./mods .pakku/multimc-overrides/.minecraft/mods
          cd .pakku/multimc-overrides/
          
          zip -r ${{ needs.info.outputs.project_full_name }}-multimc.zip icon.png mmc-pack.json instance.cfg .minecraft/ flame/
      
      - name: Upload zip multimc
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ${{ needs.info.outputs.project_full_name }}-multimc
          path: .pakku/multimc-overrides/${{ needs.info.outputs.project_full_name }}-multimc.zip
          if-no-files-found: error
